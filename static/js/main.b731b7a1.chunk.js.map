{"version":3,"sources":["resources/logo.svg","components/header.jsx","utils/calculator.js","components/og.jsx","components/pre-boil-gravity.jsx","components/pre-boil-volume.jsx","components/fg.jsx","components/alcohol-content.jsx","components/apparent-attenuation.jsx","components/strike-temperature.jsx","components/strike-volume.jsx","components/total-water.jsx","components/sparge-volume.jsx","components/evap-percent.jsx","components/yeast-target.jsx","components/yeast-rate.jsx","components/srm.jsx","components/ibu.jsx","components/co2.jsx","App.jsx","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","header","css","_templateObject","header__logo","_templateObject2","Header","Object","core_browser_esm","src","logo","alt","trubLoss","shrinkage","equipmentLoss","absorptionRate","convertToGravityUnits","value","toFixed","convertToGravityPoints","gravity","convertToPlato","SG","Math","pow","oz2kg","number","gal2l","totalWater","batchSize","boilTime","boilOff","grainWeight","strikeVolume","arguments","length","undefined","strikeTemp","grainTemp","targetTemp","ratio","factor","parseInt","spargeVolume","mashVolume","evaporationPercent","postBoilV","preBoilV","minutes","preBoilG","OG","grainVol","totalWaterVol","vol","PBVol","preBoilVol","malts","efficiency","volume","totalPoints","i","potential","weight","targetPitchingRate","targetRate","toPrecision","pitchingRate","type","viableCells","date","grams","cells","liquidCells","floor","Date","now","parse","FG","attenuation","alcoholContent","OE","ABW","AE","calculateRealExtract","ABV","IBU","hops","utilization","utilizationFactor","E","aa","exp","adjustment","max","SRM","MCU","Infinity","color","CO2","temp","beerVol","X","dissolvedCO2","log","toString","OriginalGravity","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","_this2","calculator","handleInputChange","e","target","name","setState","defineProperty","react_default","a","createElement","htmlFor","onChange","className","result","isNaN","isFinite","results","Component","PreBoilGravity","og","PreBoilVolume","FinalGravity","AlcoholContent","fg","formula","alc","id","ABVResults","ApparentAttenuation","atten","attenuationResults","StrikeTemperature","temp1","temp2","label","StrikeVolume","TotalWater","SpargeVolume","totalV","mashV","EvaporationPercent","YeastTargetPitchingRate","YeastPitchingRate","placeholder","autoComplete","co2Vol","method","page","App_templateObject","h1","App_templateObject2","_templateObject3","container","_templateObject4","card","_templateObject5","App","components_header","total_water","Calculator","strike_volume","strike_temperature","sparge_volume","evap_percent","pre_boil_volume","pre_boil_gravity","yeast_target","yeast_rate","alcohol_content","apparent_attenuation","ibu","srm","co2","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b731b7a1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.2115c59e.svg\";","/** @jsx jsx */\nimport { jsx, css } from '@emotion/core'\nimport logo from '../resources/logo.svg';\n\nconst header = css`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 55px;\n  background-color: #2B2B2B;\n  box-shadow: 0px 10px 30px rgba(0, 0, 0, 0.15);\n  z-index: 10;\n`;\n\nconst header__logo = css`\n  position: absolute;\n  width: 223px;\n  height: 21px;\n  left: 20px;\n  top: 17px;\n`;\n\nfunction Header() {\n  return <div css={header}><img src={logo} css={header__logo} alt=\"Beerforge\" /></div>;\n}\n\nexport default Header;\n","// CONSTANTS\nconst trubLoss = 0.5; // gal\nconst shrinkage = 4; // 4%\nconst equipmentLoss = 1; // gal\nconst absorptionRate = 0.15; // gal/lb of grain\n\n\n\n\n// PRIVATE FUNCTIONS\n\nfunction convertToGravityUnits(value) {\n  return ((value / 1000) + 1).toFixed(3);\n}\n\nfunction convertToGravityPoints(gravity) {\n  return (gravity - 1) * 1000;\n}\n\nfunction convertToPlato(SG) {\n  // E = -668.962 + (1262.45 * SG) - (776.43 * SG^2) + (182.94 * SG^3)  - specific gravity to plato\n  const E = -668.962 + (1262.45 * SG) - (776.43 * Math.pow(SG, 2)) + (182.94 * Math.pow(SG, 3));\n  return E;\n}\n\nfunction calculateRealExtract(OE, AE) {\n  // RE (real extract) = (0.8114 * AE) + (0.1886 * OE)\n  const RE = (0.8114 * AE) + (0.1886 * OE);\n  return RE;\n}\n\nfunction oz2kg(number) {\n  return number * 0.0283495;\n}\n\nfunction gal2l(number) {\n  return number * 3.78541;\n}\n\nfunction gal2ml(number) {\n  return number * 3785.41;\n}\n\nfunction tanh(number) {\n  return (Math.exp(number) - Math.exp(-number)) / (Math.exp(number) + Math.exp(-number));\n};\n\n\n\n\n// PUBLIC FUNCTIONS\n\n// * Total Water\nexport function totalWater(batchSize, boilTime, boilOff, grainWeight) {\n  // boilTime is in hours, hense (boilTime / 60)\n  // totalWater = (((batchSize + trubLoss) / (1 - (shrinkage / 100))) / (1 - (boilTime * (boilOff / 100)))) + equipmentLoss + (grainWeight * absorptionRate)\n\n  const totalWater = (((batchSize + trubLoss) / (1 - (shrinkage / 100))) / (1 - ((boilTime / 60) * (boilOff / 100)))) + equipmentLoss + (grainWeight * absorptionRate);\n  return totalWater.toFixed(2);\n}\n\n// * Strike Water Volume\nexport function strikeVolume(grainWeight, ratio = 1.5) {\n  const sVol = (ratio * grainWeight) / 4;\n  return sVol;\n}\n\n// * Strike Water Temperature\nexport function strikeTemp(grainTemp, targetTemp, ratio, factor) {\n  // R - ratio of water to grain, T1 - initial temp of grain, T2 - mash temp target\n  // Strike Water Temperature Tw = (0.2 / R)(T2 - T1) + T2\n  const useFactor = factor ? factor : 1;\n  const Tw = ((0.2 / ratio) * (targetTemp - (grainTemp * useFactor)) + parseInt(targetTemp)).toFixed(2);\n  return Tw;\n}\n\n// * Sparge Water Volume\nexport function spargeVolume(totalWater, mashVolume) {\n  return (totalWater - mashVolume).toFixed(2);\n}\n\n// Boil-Off Evaporation Percentage\nexport function evaporationPercent(postBoilV, preBoilV, minutes) {\n  // 100 - (postBoil volume * 100 / preBoil volume)\n  const result = (100 - (postBoilV * 100 / preBoilV)) / (minutes / 60);\n  return result.toFixed(1);\n}\n\n// * Pre-Boil Gravity\nexport function preBoilG(OG, grainVol, totalWaterVol, vol) {\n  const PBVol = preBoilVol(totalWaterVol, grainVol);\n  // Pre-boil specific gravity points = (Post-boil volume * Post-boil gravity points) / Pre-boil volume\n  const PreBoilG = (vol * convertToGravityPoints(OG)) / PBVol;\n\n  // convert back to gravity units and return\n  return convertToGravityUnits(PreBoilG);\n}\n\n// * Pre-Boil Volume\nexport function preBoilVol(totalWaterVol, grainVol) {\n  // totalWaterVol - (grainVol * absorptionRate) - equipmentLoss\n  const result = totalWaterVol - (grainVol * absorptionRate) - equipmentLoss;\n  return result.toFixed(2)\n}\n\n// * Original Gravity\nexport function OG(malts, efficiency, volume) {\n  let totalPoints = 0,\n      OG = null;\n\n  for ( let i = 0; i < malts.length; i++ ) {\n    totalPoints += convertToGravityPoints(malts[i].potential) * malts[i].weight;\n  }\n\n  // multiply by efficiency factor\n  OG = totalPoints * (efficiency/100) / volume;\n\n  // convert back to gravity units and return\n  return convertToGravityUnits(OG);\n}\n\n// * Target Yeast Pitching Rate\nexport function targetPitchingRate(OG, vol, targetRate) {\n  // Target pitch rate: million cells / ml / degree plato\n  const rate = (targetRate * 1000000) * gal2ml(vol) * convertToPlato(OG);\n  return (rate / 1000000000).toPrecision(3);\n}\n\n// * Yeast Pitching Rate\nexport function pitchingRate(type, number = null, date = null, grams = null, cells = null) {\n  let viableCells;\n  if (type === 'liquid') {\n    const daysElapsed = Math.floor((Date.now() - Date.parse(date)) / 86400000);\n    const liquidCells = number * 100000000;\n    viableCells = liquidCells - (liquidCells * ((daysElapsed * 0.7) / 100));\n  } else if (type === 'dry') {\n    viableCells = grams * cells * 1000000;\n  }\n  return (viableCells / 1000000).toPrecision(3);\n}\n\n// * Final Gravity\nexport function FG(OG, attenuation) {\n  // (Gravity points - (Gravity points * Attenuation rate%) + 1000) / 1000\n  const gravity = convertToGravityPoints(OG);\n  const aPercentage = attenuation/100;\n\n  return ((gravity - (gravity * aPercentage) + 1000) / 1000).toFixed(3);\n}\n\n// * Alcohol Content\nexport function alcoholContent(OG, FG, type = 'ABV') {\n  // ABW = (OE - RE) / (2.0665 - (.010665 * OE) )      - alcohol by weight\n  // ABV = (ABW * (FG / .794) )                        - alcohol by vol\n  const OE = convertToPlato(OG);\n  const AE = convertToPlato(FG);\n  const RE = calculateRealExtract(OE, AE);\n  const ABW = (OE - RE) / (2.0665 - (.010665 * OE) );\n  const ABV = (ABW * (FG / .794) );\n\n  const result = type === 'ABW' ? ABW.toFixed(2) : ABV.toFixed(2);\n\n  return result;\n}\n\n// * Attenuation\nexport function attenuation(OG, FG) {\n  // A = 100 * (OG – FG)/(OG – 1.0)\n  const A = (100 * (OG - FG)/(OG - 1.0)).toFixed(1);\n  return A;\n}\n\n// * IBU\nexport function IBU(hops, OG, vol, type = 'rager') {\n  // TODO: sepatate the unit conversions out of this function\n\n  let utilization,\n      IBU = 0;\n\n  for ( let i = 0; i < hops.length; i++ ) {\n    const utilizationFactor = hops[i].type === 'pellet' ? 1.15 : 1.0;\n\n    if (type === 'tinseth') {\n      utilization = (1.65 * Math.pow(0.000125, OG - 1.0) * ((1 - Math.pow(Math.E, -0.04 * hops[i].length)) / 4.15));\n      IBU += utilization * ((hops[i].aa / 100.0 * oz2kg(hops[i].weight) * 1000000) / gal2l(vol) * utilizationFactor);\n    } else if (type === 'rager') {\n      utilization = 18.11 + 13.86 * tanh((hops[i].length - 31.32) / 18.27);\n      const adjustment = Math.max(0, (OG - 1.050) / 0.2);\n      IBU += oz2kg(hops[i].weight) * 100 * utilization * utilizationFactor * hops[i].aa / (gal2l(vol) * (1 + adjustment));\n    }\n  }\n  \n  return IBU.toFixed(2);\n}\n\n// * SRM\nexport function SRM(malts, vol) {\n  // MCU = (grain_color * grain_weight_lbs) / volume_gallons    - Malt Color Units\n  // SRM = 1.4922 * [MCU ^ 0.6859]                              - The more accurate Morey equation\n  let MCU = 0,\n      SRM;\n\n  for ( let i = 0; i < malts.length; i++ ) {\n    MCU += (malts[i].color * malts[i].weight) / vol;\n\n    MCU = Infinity === MCU ? 0 : MCU;\n  }\n\n  SRM = (1.4922 * Math.pow(MCU, 0.6859)).toFixed(2);\n\n  return SRM;\n}\n\n// * CO2\nexport function CO2(temp, vol, type, beerVol) {\n  let X,\n      dissolvedCO2 = ((-0.9753) * Math.log(temp) + 4.9648);\n      beerVol = null === beerVol ? 5 : '' === beerVol.toString() ? 5 : beerVol;\n\n  switch (type) {\n    case 'forced':\n      // P = -16.6999 - 0.0101059*T + 0.00116512*T^2 + 0.173354*T*V + 4.24267*V - 0.0684226*V^2\n      X = (-16.6999 - (0.0101059 * temp) + (0.00116512 * Math.pow(temp, 2)) + (0.173354 * temp * vol) + (4.24267 * vol) - (0.0684226 * Math.pow(vol, 2))).toFixed(2);\n      break;\n    case 'cornSugar':\n      X = ((((vol - dissolvedCO2) * 4 * (beerVol * 3.8)) / 28.34952) * 1).toFixed(2);\n      break;\n    case 'caneSugar':\n      X = ((((vol - dissolvedCO2) * 4 * (beerVol * 3.8)) / 28.34952) * 0.91).toFixed(2);\n      break;\n    case 'dme':\n      X = ((((vol - dissolvedCO2) * 5.33 * (beerVol * 3.8) ) / 28.34952) * 0.91).toFixed(2);\n      break;\n    default:\n      break;\n  }\n\n  return X;\n}","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass OriginalGravity extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      potential: '',\n      weight: '',\n      efficiency: '',\n      volume: '',\n    }\n  }\n\n  render() {\n    const { calculator } = this.props;\n\n    const handleInputChange = (e) => {\n      const type = e.target.name;\n      this.setState({[type]: e.target.value});\n    }\n\n    const results = () => {\n      const result = calculator([{potential: this.state.potential, weight: this.state.weight}], this.state.efficiency, this.state.volume);\n       return !isNaN(result) && isFinite(result) ? result : '';\n    }\n\n    return (\n      <div>\n        <h2>Original Gravity</h2>\n        <div>\n          <label htmlFor=\"potential\">Malt Potential</label><br />\n          <input\n            name=\"potential\"\n            type=\"number\"\n            value={this.state.potential}\n            onChange={handleInputChange}\n          ></input><br />\n          <label htmlFor=\"weight\">Malt Weight (lbs)</label><br />\n          <input\n            name=\"weight\"\n            type=\"number\"\n            value={this.state.weight}\n            onChange={handleInputChange}\n          ></input><br />\n          <label htmlFor=\"efficiency\">Mash Efficiency (%)</label><br />\n          <input\n            name=\"efficiency\"\n            type=\"number\"\n            value={this.state.efficiency}\n            onChange={handleInputChange}\n          ></input><br />\n          <label htmlFor=\"volume\">Post-boil Volume (gal)</label><br />\n          <input\n            name=\"volume\"\n            type=\"number\"\n            value={this.state.volume}\n            onChange={handleInputChange}\n          ></input><br />\n        </div>\n        <div>\n          <h3>Result:</h3>\n          <p className=\"result\">{results()}</p>\n        </div>\n      </div>\n    );\n  }\n}\n\nOriginalGravity.propTypes = {\n  calculator: PropTypes.func\n};\n\nexport default OriginalGravity;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass PreBoilGravity extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      og: '',\n      volume: '',\n      grainVol: '',\n      totalWaterVol: '',\n    }\n  }\n\n  render() {\n    const { calculator } = this.props;\n\n    const handleInputChange = (e) => {\n      const type = e.target.name;\n      this.setState({[type]: e.target.value});\n    }\n\n    const results = () => {\n      const result = calculator(this.state.og, this.state.grainVol, this.state.totalWaterVol, this.state.volume);\n       return !isNaN(result) && isFinite(result) && result > 1 ? result : '';\n    }\n\n    return (\n      <div>\n        <h2>Pre-Boil Gravity</h2>\n        <div>\n        <label htmlFor=\"grainVol\">Malt Weight (lbs)</label><br />\n          <input\n            name=\"grainVol\"\n            type=\"number\"\n            value={this.state.grainVol}\n            onChange={handleInputChange}\n          ></input><br />\n          <label htmlFor=\"totalWaterVol\">Total Water Volume</label><br />\n          <input\n            name=\"totalWaterVol\"\n            type=\"number\"\n            value={this.state.totalWaterVol}\n            onChange={handleInputChange}\n          ></input><br />\n          <label htmlFor=\"volume\">Post-boil Volume (gal)</label><br />\n          <input\n            name=\"volume\"\n            type=\"number\"\n            value={this.state.volume}\n            onChange={handleInputChange}\n          ></input><br />\n          <label htmlFor=\"og\">Original Gravity</label><br />\n          <input\n            name=\"og\"\n            type=\"number\"\n            value={this.state.og}\n            onChange={handleInputChange}\n          ></input><br />\n        </div>\n        <div>\n          <h3>Result:</h3>\n          <p className=\"result\">{results()}</p>\n        </div>\n      </div>\n    );\n  }\n}\n\nPreBoilGravity.propTypes = {\n  calculator: PropTypes.func\n};\n\nexport default PreBoilGravity;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass PreBoilVolume extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      totalWaterVol: '',\n      grainWeight: '',\n    }\n  }\n\n  render() {\n    const { calculator } = this.props;\n    let vol = null;\n\n    const handleInputChange = (e) => {\n      const type = e.target.name;\n      this.setState({[type]: e.target.value});\n    }\n\n    const results = () => {\n      const result = calculator(this.state.totalWaterVol, this.state.grainWeight);\n       if (!isNaN(result) && isFinite(result) && result > 0) {\n         vol = 'gal';\n         return result;\n       }\n    }\n\n    return (\n      <div>\n        <h2>Pre-Boil Volume</h2>\n        <div>\n          <label htmlFor=\"totalWaterVol\">Total Water Volume</label><br />\n          <input\n            name=\"totalWaterVol\"\n            type=\"number\"\n            value={this.state.totalWaterVol}\n            onChange={handleInputChange}\n          ></input><br />\n          <label htmlFor=\"grainWeight\">Malt Weight (lbs)</label><br />\n          <input\n            name=\"grainWeight\"\n            type=\"number\"\n            value={this.state.grainWeight}\n            onChange={handleInputChange}\n          ></input><br />\n        </div>\n        <div>\n          <h3>Result:</h3>\n          <p className=\"result\">{results()} <label>{vol}</label></p>\n        </div>\n      </div>\n    );\n  }\n}\n\nPreBoilVolume.propTypes = {\n  calculator: PropTypes.func\n};\n\nexport default PreBoilVolume;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass FinalGravity extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      og: '',\n      attenuation: '',\n    }\n  }\n\n  render() {\n    const { calculator } = this.props;\n\n    const handleInputChange = (e) => {\n      const type = e.target.name;\n      this.setState({[type]: e.target.value});\n    }\n\n    const results = () => {\n      const result = calculator(this.state.og, this.state.attenuation);\n       return !isNaN(result) && isFinite(result) && result > 0 ? result : '';\n    }\n\n    return (\n      <div>\n        <h2>Final Gravity</h2>\n        <div>\n          <label htmlFor=\"og\">Original Gravity</label><br />\n          <input\n            name=\"og\"\n            type=\"number\"\n            value={this.state.og}\n            onChange={handleInputChange}\n          ></input><br />\n          <label htmlFor=\"attenuation\">Attenuation (%)</label><br />\n          <input\n            name=\"attenuation\"\n            type=\"number\"\n            value={this.state.attenuation}\n            onChange={handleInputChange}\n          ></input>\n        </div>\n        <div>\n          <h3>Result:</h3>\n          <p className=\"result\">{results()}</p>\n        </div>\n      </div>\n    );\n  }\n}\n\nFinalGravity.propTypes = {\n  calculator: PropTypes.func\n};\n\nexport default FinalGravity;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass AlcoholContent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      og: '',\n      fg: '',\n      formula: 'ABV',\n    }\n  }\n\n  render() {\n    const { calculator } = this.props;\n    let alc = null;\n\n    const handleInputChange = (e) => {\n      const type = e.target.name;\n      this.setState({[type]: e.target.value});\n    }\n\n    const handleCheckboxChange = (e) => {\n      const value = this.state.formula === 'ABV' ? 'ABW' : 'ABV';\n      this.setState({formula: value});\n    }\n\n    const ABVResults = () => {\n      const result = calculator(this.state.og, this.state.fg, this.state.formula);\n      if (!isNaN(result) && isFinite(result) && result > 0) {\n        alc = this.state.formula;\n        return result + '%';\n      } else {\n          return '';\n      }\n    }\n\n    return (\n      <div>\n        <h2>Alcohol Content</h2>\n        <div>\n          <label htmlFor=\"og\">Original Gravity</label><br />\n          <input\n            name=\"og\"\n            type=\"number\"\n            value={this.state.og}\n            onChange={handleInputChange}\n          ></input><br />\n          <label htmlFor=\"fg\">Final Gravity</label><br />\n          <input\n            name=\"fg\"\n            type=\"number\"\n            value={this.state.fg}\n            onChange={handleInputChange}\n          ></input><br />\n          <label htmlFor=\"abvFormula\">ABV</label>\n          <input\n            type=\"checkbox\"\n            id=\"abvFormula\"\n            name=\"formula\"\n            value={this.state.formula}\n            onChange={handleCheckboxChange}\n          ></input>\n          <label htmlFor=\"abvFormula\"><span className=\"toggle\"></span>ABW</label><br />\n        </div>\n        <div>\n          <h3>Result:</h3>\n          <p className=\"result\">{ABVResults()} <label>{alc}</label></p>\n        </div>\n      </div>\n    );\n  }\n}\n\nAlcoholContent.propTypes = {\n  calculator: PropTypes.func\n};\n\nexport default AlcoholContent;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass ApparentAttenuation extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      og: '',\n      fg: '',\n    }\n  }\n\n  render() {\n    const { calculator } = this.props;\n    let atten = null;\n\n    const handleInputChange = (e) => {\n      const type = e.target.name;\n      this.setState({[type]: e.target.value});\n    }\n\n    const attenuationResults = () => {\n      const result = calculator(this.state.og, this.state.fg);\n      if (!isNaN(result) && isFinite(result) && result > 0 && result <= 100) {\n        atten = '%';\n        return result;\n      }\n    }\n\n    return (\n      <div>\n        <h2>Apparent<br />Attenuation</h2>\n        <div>\n          <label htmlFor=\"og\">Original Gravity</label><br />\n          <input\n            name=\"og\"\n            type=\"number\"\n            value={this.state.og}\n            onChange={handleInputChange}\n          ></input><br />\n          <label htmlFor=\"fg\">Final Gravity</label><br />\n          <input\n            name=\"fg\"\n            type=\"number\"\n            value={this.state.fg}\n            onChange={handleInputChange}\n          ></input><br />\n        </div>\n        <div>\n          <h3>Result:</h3>\n          <p className=\"result\">{attenuationResults()}<label>{atten}</label></p>\n        </div>\n      </div>\n    );\n  }\n}\n\nApparentAttenuation.propTypes = {\n  calculator: PropTypes.func,\n};\n\nexport default ApparentAttenuation;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass StrikeTemperature extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      ratio: '',\n      temp1: '',\n      temp2: '',\n      factor: '',\n    }\n  }\n\n  render() {\n    const { calculator } = this.props;\n    let label = null;\n\n    const handleInputChange = (e) => {\n      const type = e.target.name;\n      this.setState({[type]: e.target.value});\n    }\n\n    const results = () => {\n      const result = calculator(this.state.temp1, this.state.temp2, this.state.ratio, this.state.factor);\n      if (!isNaN(result) && isFinite(result) && result > 0) {\n        label = '°F';\n        return result;\n      }\n    }\n\n    return (\n      <div>\n        <h2>Strike Water<br />Temperature</h2>\n        <div>\n          <label htmlFor=\"ratio\">Quarts per lb of grain</label><br />\n          <input\n            name=\"ratio\"\n            type=\"number\"\n            value={this.state.ratio}\n            onChange={handleInputChange}\n          ></input><br />\n          <label htmlFor=\"temp1\">Malt Temperature (°F)</label><br />\n          <input\n            name=\"temp1\"\n            type=\"number\"\n            value={this.state.temp1}\n            onChange={handleInputChange}\n          ></input><br />\n          <label htmlFor=\"temp2\">Target Temperature (°F)</label><br />\n          <input\n            name=\"temp2\"\n            type=\"number\"\n            value={this.state.temp2}\n            onChange={handleInputChange}\n          ></input><br />\n          <label htmlFor=\"factor\">Adjustment Factor</label><br />\n          <input\n            name=\"factor\"\n            type=\"number\"\n            value={this.state.factor}\n            onChange={handleInputChange}\n          ></input><br />\n        </div>\n        <div>\n          <h3>Result:</h3>\n          <p className=\"result\">{results()} <label>{label}</label></p>\n        </div>\n      </div>\n    );\n  }\n}\n\nStrikeTemperature.propTypes = {\n  calculator: PropTypes.func\n};\n\nexport default StrikeTemperature;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass StrikeVolume extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      ratio: '',\n      weight: '',\n    }\n  }\n\n  render() {\n    const { calculator } = this.props;\n    let label = null;\n\n    const handleInputChange = (e) => {\n      const type = e.target.name;\n      this.setState({[type]: e.target.value});\n    }\n\n    const results = () => {\n      const result = calculator(this.state.weight, this.state.ratio);\n      if (!isNaN(result) && isFinite(result) && result > 0) {\n        label = 'gal';\n        return result;\n      }\n    }\n\n    return (\n      <div>\n        <h2>Strike Water<br />Volume</h2>\n        <div>\n          <label htmlFor=\"weight\">Malt Weight (lbs)</label><br />\n          <input\n            name=\"weight\"\n            type=\"number\"\n            value={this.state.weight}\n            onChange={handleInputChange}\n          ></input><br />\n          <label htmlFor=\"ratio\">Quarts per lb of grain</label><br />\n          <input\n            name=\"ratio\"\n            type=\"number\"\n            value={this.state.ratio}\n            onChange={handleInputChange}\n          ></input>\n        </div>\n        <div>\n          <h3>Result:</h3>\n          <p className=\"result\">{results()} <label>{label}</label></p>\n        </div>\n      </div>\n    );\n  }\n}\n\nStrikeVolume.propTypes = {\n  calculator: PropTypes.func\n};\n\nexport default StrikeVolume;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass TotalWater extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      batchSize: '',\n      grainWeight: '',\n      boilTime: '',\n      boilOff: '',\n    }\n  }\n\n  render() {\n    const { calculator } = this.props;\n    let label = null;\n\n    const handleInputChange = (e) => {\n      const type = e.target.name;\n      this.setState({[type]: e.target.value});\n    }\n\n    const results = () => {\n      const result = calculator(parseInt(this.state.batchSize), parseInt(this.state.boilTime), parseInt(this.state.boilOff), parseInt(this.state.grainWeight));\n\n       if (this.state.batchSize && this.state.boilTime && this.state.boilOff && this.state.grainWeight && !isNaN(result) && isFinite(result)) {\n         label = 'gal';\n         return result;\n       }\n    }\n\n    return (\n      <div>\n        <h2>Total Water Needed</h2>\n        <div>\n          <label htmlFor=\"batchSize\">Batch Size</label><br />\n          <input\n            name=\"batchSize\"\n            type=\"number\"\n            value={this.state.batchSize}\n            onChange={handleInputChange}\n          ></input><br />\n          <label htmlFor=\"grainWeight\">Malt Weight (lbs)</label><br />\n          <input\n            name=\"grainWeight\"\n            type=\"number\"\n            value={this.state.grainWeight}\n            onChange={handleInputChange}\n          ></input><br />\n          <label htmlFor=\"boilTime\">Boil Time (min)</label><br />\n          <input\n            name=\"boilTime\"\n            type=\"number\"\n            value={this.state.boilTime}\n            onChange={handleInputChange}\n          ></input><br />\n          <label htmlFor=\"boilOff\">Evaporation Loss %/hr</label><br />\n          <input\n            name=\"boilOff\"\n            type=\"number\"\n            value={this.state.boilOff}\n            onChange={handleInputChange}\n          ></input><br />\n        </div>\n        <div>\n          <h3>Result:</h3>\n          <p className=\"result\">{results()} <label>{label}</label></p>\n        </div>\n      </div>\n    );\n  }\n}\n\nTotalWater.propTypes = {\n  calculator: PropTypes.func\n};\n\nexport default TotalWater;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass SpargeVolume extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      totalV: '',\n      mashV: '',\n    }\n  }\n\n  render() {\n    const { calculator } = this.props;\n    let label = null;\n\n    const handleInputChange = (e) => {\n      const type = e.target.name;\n      this.setState({[type]: e.target.value});\n    }\n\n    const results = () => {\n      const result = calculator(this.state.totalV, this.state.mashV);\n      if (!isNaN(result) && isFinite(result) && result > 0) {\n        label = 'gal';\n        return result;\n      }\n    }\n\n    return (\n      <div>\n        <h2>Sparge Water<br />Volume</h2>\n        <div>\n          <label htmlFor=\"totalV\">Total water volume</label><br />\n          <input\n            name=\"totalV\"\n            type=\"number\"\n            value={this.state.totalV}\n            onChange={handleInputChange}\n          ></input><br />\n          <label htmlFor=\"mashV\">Mash water volume</label><br />\n          <input\n            name=\"mashV\"\n            type=\"number\"\n            value={this.state.mashV}\n            onChange={handleInputChange}\n          ></input>\n        </div>\n        <div>\n          <h3>Result:</h3>\n          <p className=\"result\">{results()} <label>{label}</label></p>\n        </div>\n      </div>\n    );\n  }\n}\n\nSpargeVolume.propTypes = {\n  calculator: PropTypes.func\n};\n\nexport default SpargeVolume;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass EvaporationPercent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      postBoilV: '',\n      preBoilV: '',\n      boilTime: '',\n    }\n  }\n\n  render() {\n    const { calculator } = this.props;\n    let label = null;\n\n    const handleInputChange = (e) => {\n      const type = e.target.name;\n      this.setState({[type]: e.target.value});\n    }\n\n    const results = () => {\n      const result = calculator(this.state.postBoilV, this.state.preBoilV, this.state.boilTime);\n      if (!isNaN(result) && isFinite(result) && result > 0) {\n        label = '%';\n        return result;\n      }\n    }\n\n    return (\n      <div>\n        <h2>Evaporation %/hr</h2>\n        <div>\n          <label htmlFor=\"preBoilV\">Pre-Boil volume</label><br />\n          <input\n            name=\"preBoilV\"\n            type=\"number\"\n            value={this.state.preBoilV}\n            onChange={handleInputChange}\n          ></input><br />\n          <label htmlFor=\"postBoilV\">Post-Boil volume</label><br />\n          <input\n            name=\"postBoilV\"\n            type=\"number\"\n            value={this.state.postBoilV}\n            onChange={handleInputChange}\n          ></input><br />\n          <label htmlFor=\"boilTime\">Boil Time (min)</label><br />\n          <input\n            name=\"boilTime\"\n            type=\"number\"\n            value={this.state.boilTime}\n            onChange={handleInputChange}\n          ></input><br />\n        </div>\n        <div>\n          <h3>Result:</h3>\n          <p className=\"result\">{results()}<label>{label}</label></p>\n        </div>\n      </div>\n    );\n  }\n}\n\nEvaporationPercent.propTypes = {\n  calculator: PropTypes.func\n};\n\nexport default EvaporationPercent;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass YeastTargetPitchingRate extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      og: '',\n      volume: '',\n      target: '0.75',\n    }\n  }\n\n  render() {\n    const { calculator } = this.props;\n    let label = '';\n\n    const handleInputChange = (e) => {\n      const type = e.target.name;\n      this.setState({[type]: e.target.value});\n    }\n\n    const results = () => {\n      const result = calculator(this.state.og, this.state.volume, this.state.target);\n      if (!isNaN(result) && isFinite(result) && result > 0) {\n        label = 'billion cells';\n        return result;\n      } else {\n        label = '';\n      }\n    }\n\n    return (\n      <div>\n        <h2>Target Yeast<br />Pitching Rate</h2>\n        <div>\n          <label htmlFor=\"og\">Original Gravity</label><br />\n          <input\n            name=\"og\"\n            type=\"number\"\n            value={this.state.og}\n            onChange={handleInputChange}\n          ></input><br />\n          <label htmlFor=\"volume\">Volume</label><br />\n          <input\n            name=\"volume\"\n            type=\"number\"\n            value={this.state.volume}\n            onChange={handleInputChange}\n          ></input><br />\n          <label htmlFor=\"target\">Target Rate<br />(million cells / ml / °Plato)</label><br />\n          <select\n            name=\"target\"\n            value={this.state.target}\n            onChange={handleInputChange}\n          >\n            <option value=\"0.35\">0.35 (Mfr. rate for Ale)</option>\n            <option value=\"0.5\">0.5 (Mfr. rate for Ale)</option>\n            <option value=\"0.75\">0.75 (Ale)</option>\n            <option value=\"1.0\">1.0 (Ale)</option>\n            <option value=\"1.25\">1.25 (High OG Ale)</option>\n            <option value=\"1.5\">1.5 (Lager)</option>\n            <option value=\"1.75\">1.75 (Lager)</option>\n            <option value=\"2.0\">2.0 (High OG Lager)</option>\n          </select><br />\n        </div>\n        <div>\n          <h3>Result:</h3>\n          <p className=\"result\">{results()} <label>{label}</label></p>\n        </div>\n      </div>\n    );\n  }\n}\n\nYeastTargetPitchingRate.propTypes = {\n  calculator: PropTypes.func\n};\n\nexport default YeastTargetPitchingRate;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass YeastPitchingRate extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      og: '',\n      volume: '',\n      type: 'liquid',\n      number: '',\n      date: '',\n      grams: '',\n      cells: '',\n    }\n  }\n\n  render() {\n    const { calculator } = this.props;\n    let label = '';\n\n    const handleInputChange = (e) => {\n      const type = e.target.name;\n      this.setState({[type]: e.target.value});\n    }\n\n    const results = () => {\n      const result = calculator(this.state.type, this.state.number, this.state.date, this.state.grams, this.state.cells);\n      if (!isNaN(result) && isFinite(result) && result > 0) {\n        label = 'billion cells';\n        return result;\n      } else {\n        label = '';\n      }\n    }\n\n    return (\n      <div>\n        <h2>Total Yeast Cells</h2>\n        <div>\n          <label htmlFor=\"type\">Yeast Type</label><br />\n          <select\n            name=\"type\"\n            value={this.state.target}\n            onChange={handleInputChange}\n          >\n            <option value=\"liquid\">Liquid (pack/vial)</option>\n            <option value=\"dry\">Dry</option>\n          </select><br />\n          {this.state.type === 'liquid' &&\n            <div>\n              <label htmlFor=\"number\">Number of Liquid Packs</label><br />\n              <input\n                name=\"number\"\n                type=\"number\"\n                value={this.state.number}\n                onChange={handleInputChange}\n              ></input><br />\n              <label htmlFor=\"date\">Manufactured Date</label><br />\n              <input\n                name=\"date\"\n                type=\"date\"\n                value={this.state.date}\n                onChange={handleInputChange}\n              ></input><br />\n            </div>\n          }\n          {this.state.type === 'dry' &&\n            <div>\n              <label htmlFor=\"grams\">Grams of Dry Yeast</label><br />\n              <input\n                name=\"grams\"\n                type=\"number\"\n                value={this.state.grams}\n                onChange={handleInputChange}\n              ></input><br />\n              <label htmlFor=\"cells\">Bn Cells/gram</label><br />\n              <input\n                name=\"cells\"\n                type=\"number\"\n                value={this.state.cells}\n                onChange={handleInputChange}\n                placeholder=\"10\"\n              ></input><br />\n            </div>\n          }\n        </div>\n        <div>\n          <h3>Result:</h3>\n          <p className=\"result\">{results()} <label>{label}</label></p>\n        </div>\n      </div>\n    );\n  }\n}\n\nYeastPitchingRate.propTypes = {\n  calculator: PropTypes.func\n};\n\nexport default YeastPitchingRate;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass SRM extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      color: '',\n      weight: '',\n      volume: '',\n    }\n  }\n\n  render() {\n    const { calculator } = this.props;\n    let label = null;\n\n    const handleInputChange = (e) => {\n      const type = e.target.name;\n      this.setState({[type]: e.target.value});\n    }\n\n    const results = () => {\n      const result = calculator([{color: this.state.color, weight: this.state.weight}], this.state.volume);\n      if (!isNaN(result) && isFinite(result) && result > 0) {\n        label = 'SRM';\n        return result;\n      } else {\n          return '';\n      }\n    }\n\n    return (\n      <div>\n        <h2>Beer Color</h2>\n        <div>\n          <label htmlFor=\"color\">Malt Color</label><br />\n          <input\n            name=\"color\"\n            type=\"number\"\n            value={this.state.color}\n            onChange={handleInputChange}\n          ></input><br />\n          <label htmlFor=\"weight\">Malt Weight (lbs)</label><br />\n          <input\n            name=\"weight\"\n            type=\"number\"\n            value={this.state.weight}\n            onChange={handleInputChange}\n          ></input><br />\n          <label htmlFor=\"volume\">Final Volume (gal)</label><br />\n          <input\n            name=\"volume\"\n            type=\"number\"\n            value={this.state.volume}\n            onChange={handleInputChange}\n          ></input><br />\n        </div>\n        <div>\n          <h3>Result:</h3>\n          <p className=\"result\">{results()} <label>{label}</label></p>\n        </div>\n      </div>\n    );\n  }\n}\n\nSRM.propTypes = {\n  calculator: PropTypes.func\n};\n\nexport default SRM;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass IBU extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      aa: '',\n      weight: '',\n      length: '',\n      type: '',\n      og: '',\n      vol: '',\n      formula: 'tinseth',\n    }\n  }\n\n  render() {\n    const { calculator } = this.props;\n    let label = null;\n\n    const handleInputChange = (e) => {\n      const type = e.target.name;\n      this.setState({[type]: e.target.value});\n    }\n\n    const handleCheckboxChange = (e) => {\n      const value = this.state.formula === 'tinseth' ? 'rager' : 'tinseth';\n      this.setState({formula: value});\n    }\n\n    const results = () => {\n      const result = calculator([{aa: this.state.aa, weight: this.state.weight, length: this.state.length, type: this.state.type}], this.state.og, this.state.vol, this.state.formula);\n      if (!isNaN(result) && isFinite(result) && result > 0) {\n        label = 'IBU';\n        return result;\n      } else {\n          return '';\n      }\n    }\n\n    return (\n      <div>\n        <h2>IBU</h2>\n        <div>\n          <label htmlFor=\"aa\">Hop Alpha Acid</label><br />\n          <input\n            name=\"aa\"\n            type=\"number\"\n            value={this.state.aa}\n            onChange={handleInputChange}\n            autoComplete=\"none\"\n          ></input><br />\n          <label htmlFor=\"weight\">Hop Weight (oz)</label><br />\n          <input\n            name=\"weight\"\n            type=\"number\"\n            value={this.state.weight}\n            onChange={handleInputChange}\n          ></input><br />\n          <label htmlFor=\"length\">Hop Time In Boil</label><br />\n          <input\n            name=\"length\"\n            type=\"number\"\n            value={this.state.length}\n            onChange={handleInputChange}\n          ></input><br />\n          <label htmlFor=\"type\">Hop Type</label><br />\n          <select\n            name=\"type\"\n            value={this.state.type}\n            onChange={handleInputChange}\n          >\n            <option value=\"whole\">Whole Leaf</option>\n            <option value=\"pellet\">Pellet</option>\n          </select><br />\n          <label htmlFor=\"og\">Original Gravity</label><br />\n          <input\n            name=\"og\"\n            type=\"number\"\n            value={this.state.og}\n            onChange={handleInputChange}\n          ></input><br />\n          <label htmlFor=\"vol\">Final Volume (gal)</label><br />\n          <input\n            name=\"vol\"\n            type=\"number\"\n            value={this.state.vol}\n            onChange={handleInputChange}\n          ></input><br />\n          <label htmlFor=\"ibuFormula\">Tinseth</label>\n          <input\n            type=\"checkbox\"\n            id=\"ibuFormula\"\n            name=\"formula\"\n            value={this.state.formula}\n            onChange={handleCheckboxChange}\n          ></input>\n          <label htmlFor=\"ibuFormula\"><span className=\"toggle\"></span>Rager</label><br />\n        </div>\n        <div>\n          <h3>Result:</h3>\n          <p className=\"result\">{results()} <label>{label}</label></p>\n        </div>\n      </div>\n    );\n  }\n}\n\nIBU.propTypes = {\n  calculator: PropTypes.func\n};\n\nexport default IBU;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass CO2 extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      temp: '',\n      beerVol: '',\n      co2Vol: '',\n      method: 'cornSugar',\n    }\n  }\n\n  render() {\n    const { calculator } = this.props;\n    let label = null;\n\n    const handleInputChange = (e) => {\n      const type = e.target.name;\n      this.setState({[type]: e.target.value});\n    }\n\n    const results = () => {\n      const result = calculator(this.state.temp, this.state.co2Vol, this.state.method, this.state.beerVol);\n      if (!isNaN(result) && isFinite(result) && result > 0) {\n        label = this.state.method === 'forced' ? 'psi' : 'oz';\n        return result;\n      } else {\n        return '';\n      }\n    }\n\n    return (\n      <div>\n        <h2>Carbonation</h2>\n        <div>\n          <label htmlFor=\"method\">Carbonation Method</label><br />\n          <select\n            name=\"method\"\n            value={this.state.method}\n            onChange={handleInputChange}\n          >\n            <option value=\"cornSugar\">Corn Sugar</option>\n            <option value=\"caneSugar\">Cane Sugar</option>\n            <option value=\"dme\">DME</option>\n            <option value=\"forced\">Forced/Kegged</option>\n          </select><br />\n          <label htmlFor=\"beerVol\">Beer Volume</label><br />\n          <input\n            name=\"beerVol\"\n            type=\"number\"\n            value={this.state.beerVol}\n            onChange={handleInputChange}\n          ></input><br />\n          <label htmlFor=\"co2Vol\">CO2 Target Volume</label><br />\n          <input\n            name=\"co2Vol\"\n            type=\"number\"\n            value={this.state.co2Vol}\n            onChange={handleInputChange}\n          ></input><br />\n          <label htmlFor=\"temp\">Temperature</label><br />\n          <input\n            name=\"temp\"\n            type=\"number\"\n            value={this.state.temp}\n            onChange={handleInputChange}\n          ></input><br />\n        </div>\n        <div>\n          <h3>Result:</h3>\n          <p className=\"result\">{results()} <label>{label}</label></p>\n        </div>\n      </div>\n    );\n  }\n}\n\nCO2.propTypes = {\n  calculator: PropTypes.func\n};\n\nexport default CO2;\n","/** @jsx jsx */\n\nimport { Component } from 'react';\nimport { jsx, css } from '@emotion/core'\n\nimport Header from './components/header';\nimport * as Calculator from './utils/calculator.js';\nimport OriginalGravity from './components/og';\nimport PreBoilGravity from './components/pre-boil-gravity';\nimport PreBoilVolume from './components/pre-boil-volume';\nimport FinalGravity from './components/fg';\nimport AlcoholContent from './components/alcohol-content';\nimport ApparentAttenuation from './components/apparent-attenuation';\nimport StrikeTemperature from './components/strike-temperature';\nimport StrikeVolume from './components/strike-volume';\nimport TotalWater from './components/total-water';\nimport SpargeVolume from './components/sparge-volume';\nimport EvaporationPercent from './components/evap-percent';\nimport YeastTargetPitchingRate from './components/yeast-target';\nimport YeastPitchingRate from './components/yeast-rate';\nimport SRM from './components/srm';\nimport IBU from './components/ibu';\nimport CO2 from './components/co2';\n\nconst lightBrown = '#58382a';\nconst darkBrown = '#191919';\nconst white = '#fff;';\nconst yellow = '#f4d03f';\n\nconst page = css`\n  padding: 90px 50px 50px;\n  width: 100%;\n  min-height: 100vh;\n  background: linear-gradient(125.4deg, ${lightBrown} 0%, ${darkBrown} 118.45%);\n  box-sizing border-box;\n`;\n\nconst h1 = css`\n  margin-bottom: 10px;\n  color: white;\n  text-align: center;\n  font-size: 20px;\n`;\n\nconst p = css`\n  margin: 0 auto 20px;\n  max-width: 650px;\n  color: white;\n  text-align: center;\n  line-height: 1.3;\n\n  span {\n    line-height: 2;\n  }\n`;\n\nconst container = css`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n`;\n\nconst card = css`\n  display: inline-block;\n  padding: 20px;\n  margin: 15px 20px;\n  background-color: rgba(233,102,44,0.15);\n  box-sizing border-box;\n  color: ${white}\n  box-shadow: 0px 10px 30px rgba(0, 0, 0, 0.05);\n\n  label {\n    color: ${yellow};\n  }\n`;\n\nclass App extends Component {\n  render() {\n    return (\n      <div css={page} className=\"App\">\n        <Header />\n        <h1 css={h1}>Welcome to BeerForge.</h1>\n        <p css={p}>We have a ton of awesome stuff planned for this homebrewing app, but for now we hope you find our calculators helpful and fun. Keep an eye on us for complete recipie builders, brew logs and more, coming soon.<br /><span>-Cheers</span></p>\n        <div css={container}>\n          <div css={card}>\n            <TotalWater calculator={Calculator.totalWater} />\n          </div>\n          <div css={card}>\n            <StrikeVolume calculator={Calculator.strikeVolume} />\n          </div>\n          <div css={card}>\n            <StrikeTemperature calculator={Calculator.strikeTemp} />\n          </div>\n          <div css={card}>\n            <SpargeVolume calculator={Calculator.spargeVolume} />\n          </div>\n          <div css={card}>\n            <EvaporationPercent calculator={Calculator.evaporationPercent} />\n          </div>\n          <div css={card}>\n            <PreBoilVolume calculator={Calculator.preBoilVol} />\n          </div>\n          <div css={card}>\n            <OriginalGravity calculator={Calculator.OG} />\n          </div>\n          <div css={card}>\n            <PreBoilGravity calculator={Calculator.preBoilG} />\n          </div>\n          <div css={card}>\n            <YeastTargetPitchingRate calculator={Calculator.targetPitchingRate} />\n          </div>\n          <div css={card}>\n            <YeastPitchingRate calculator={Calculator.pitchingRate} />\n          </div>\n          <div css={card}>\n            <FinalGravity calculator={Calculator.FG} />\n          </div>\n          <div css={card}>\n            <AlcoholContent calculator={Calculator.alcoholContent} />\n          </div>\n          <div css={card}>\n            <ApparentAttenuation calculator={Calculator.attenuation} />\n          </div>\n          <div css={card}>\n            <IBU calculator={Calculator.IBU} />\n          </div>\n          <div css={card}>\n            <SRM calculator={Calculator.SRM} />\n          </div>\n          <div css={card}>\n            <CO2 calculator={Calculator.CO2} />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}