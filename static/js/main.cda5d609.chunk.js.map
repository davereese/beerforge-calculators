{"version":3,"sources":["resources/logo.svg","components/header.jsx","utils/calculator.js","components/og.jsx","components/pre-boil-gravity.jsx","components/pre-boil-volume.jsx","components/fg.jsx","components/alcohol-content.jsx","components/apparent-attenuation.jsx","components/strike-temperature.jsx","components/strike-volume.jsx","components/total-water.jsx","components/sparge-volume.jsx","components/evap-percent.jsx","components/srm.jsx","components/ibu.jsx","components/co2.jsx","App.jsx","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","header","css","_templateObject","header__logo","_templateObject2","Header","Object","core_browser_esm","src","logo","alt","trubLoss","shrinkage","equipmentLoss","absorptionRate","convertToGravityUnits","value","toFixed","convertToGravityPoints","gravity","convertToPlato","SG","Math","pow","oz2kg","number","gal2l","totalWater","batchSize","boilTime","boilOff","grainWeight","strikeVolume","arguments","length","undefined","strikeTemp","grainTemp","targetTemp","ratio","vGrain","parseInt","spargeVolume","mashVolume","evaporationPercent","postBoilV","preBoilV","minutes","preBoilG","OG","grainVol","totalWaterVol","vol","PBVol","preBoilVol","malts","efficiency","volume","totalPoints","i","potential","weight","FG","attenuation","alcoholContent","type","OE","ABW","AE","calculateRealExtract","ABV","IBU","hops","utilization","utilizationFactor","E","aa","exp","adjustment","max","SRM","MCU","Infinity","color","CO2","temp","beerVol","X","dissolvedCO2","log","toString","OriginalGravity","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","_this2","calculator","handleInputChange","e","target","name","setState","defineProperty","react_default","a","createElement","htmlFor","onChange","className","result","isNaN","isFinite","results","Component","PreBoilGravity","og","PreBoilVolume","FinalGravity","AlcoholContent","fg","formula","alc","id","ABVResults","ApparentAttenuation","atten","attenuationResults","StrikeTemperature","temp1","temp2","label","StrikeVolume","TotalWater","SpargeVolume","totalV","mashV","EvaporationPercent","autoComplete","co2Vol","method","page","App_templateObject","container","App_templateObject2","card","_templateObject3","App","components_header","total_water","Calculator","strike_volume","strike_temperature","sparge_volume","evap_percent","pre_boil_volume","pre_boil_gravity","alcohol_content","apparent_attenuation","ibu","srm","co2","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.cda5d609.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.2115c59e.svg\";","/** @jsx jsx */\nimport { jsx, css } from '@emotion/core'\nimport logo from '../resources/logo.svg';\n\nconst header = css`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 55px;\n  background-color: #2B2B2B;\n  box-shadow: 0px 10px 30px rgba(0, 0, 0, 0.15);\n`;\n\nconst header__logo = css`\n  position: absolute;\n  width: 223px;\n  height: 21px;\n  left: 20px;\n  top: 17px;\n`;\n\nfunction Header() {\n  return <div css={header}><img src={logo} css={header__logo} alt=\"Beerforge\" /></div>;\n}\n\nexport default Header;\n","// CONSTANTS\nconst trubLoss = 0.5; // gal\nconst shrinkage = 4; // 4%\nconst equipmentLoss = 1; // gal\nconst absorptionRate = 0.15; // gal/lb of grain\n\n\n// PRIVATE FUNCTIONS\n\nfunction convertToGravityUnits(value) {\n  return ((value / 1000) + 1).toFixed(3);\n}\n\nfunction convertToGravityPoints(gravity) {\n  return (gravity - 1) * 1000;\n}\n\nfunction convertToPlato(SG) {\n  // E = -668.962 + (1262.45 * SG) - (776.43 * SG^2) + (182.94 * SG^3)  - specific gravity to plato\n  const E = -668.962 + (1262.45 * SG) - (776.43 * Math.pow(SG, 2)) + (182.94 * Math.pow(SG, 3));\n  return E;\n}\n\nfunction calculateRealExtract(OE, AE) {\n  // RE (real extract) = (0.8114 * AE) + (0.1886 * OE)\n  const RE = (0.8114 * AE) + (0.1886 * OE);\n  return RE;\n}\n\nfunction oz2kg(number) {\n  return number * 0.0283495;\n}\n\nfunction gal2l(number) {\n  return number * 3.78541;\n}\n\nfunction tanh(number) {\n  return (Math.exp(number) - Math.exp(-number)) / (Math.exp(number) + Math.exp(-number));\n};\n\n\n// PUBLIC FUNCTIONS\n\n// * Total Water\nexport function totalWater(batchSize, boilTime, boilOff, grainWeight) {\n  // boilTime is in hours, hense (boilTime / 60)\n  // totalWater = (((batchSize + trubLoss) / (1 - (shrinkage / 100))) / (1 - (boilTime * (boilOff / 100)))) + equipmentLoss + (grainWeight * absorptionRate)\n\n  const totalWater = (((batchSize + trubLoss) / (1 - (shrinkage / 100))) / (1 - ((boilTime / 60) * (boilOff / 100)))) + equipmentLoss + (grainWeight * absorptionRate);\n  return totalWater.toFixed(2);\n}\n\n// * Strike Water Volume\nexport function strikeVolume(grainWeight, ratio = 1.5) {\n  const sVol = (ratio * grainWeight) / 4;\n  return sVol;\n}\n\n// * Strike Water Temperature\nexport function strikeTemp(grainTemp, targetTemp, ratio, vGrain, strikeVolume) {\n  // R - ratio of water to grain, T1 - initial temp of grain, T2 - mash temp target\n  // Strike Water Temperature Tw = (0.2 / R)(T2 - T1) + T2\n  const Tw = ((0.2 / ratio) * (targetTemp - grainTemp) + parseInt(targetTemp)).toFixed(2);\n  return Tw;\n}\n\n// * Sparge Water Volume\nexport function spargeVolume(totalWater, mashVolume) {\n  return (totalWater - mashVolume).toFixed(2);\n}\n\n// Boil-Off Evaporation Percentage\nexport function evaporationPercent(postBoilV, preBoilV, minutes) {\n  // 100 - (postBoil volume * 100 / preBoil volume)\n  const result = (100 - (postBoilV * 100 / preBoilV)) / (minutes / 60);\n  return result.toFixed(1);\n}\n\n// * Pre-Boil Gravity\nexport function preBoilG(OG, grainVol, totalWaterVol, vol) {\n  const PBVol = preBoilVol(totalWaterVol, grainVol);\n  // Pre-boil specific gravity points = (Post-boil volume * Post-boil gravity points) / Pre-boil volume\n  const PreBoilG = (vol * convertToGravityPoints(OG)) / PBVol;\n\n  // convert back to gravity units and return\n  return convertToGravityUnits(PreBoilG);\n}\n\n// * Pre-Boil Volume\nexport function preBoilVol(totalWaterVol, grainVol) {\n  // totalWaterVol - (grainVol * absorptionRate) - equipmentLoss\n  const result = totalWaterVol - (grainVol * absorptionRate) - equipmentLoss;\n  return result.toFixed(2)\n}\n\n// * Original Gravity\nexport function OG(malts, efficiency, volume) {\n  let totalPoints = 0,\n      OG = null;\n\n  for ( let i = 0; i < malts.length; i++ ) {\n    totalPoints += convertToGravityPoints(malts[i].potential) * malts[i].weight;\n  }\n\n  // multiply by efficiency factor\n  OG = totalPoints * (efficiency/100) / volume;\n\n  // convert back to gravity units and return\n  return convertToGravityUnits(OG);\n}\n\n// * Final Gravity\nexport function FG(OG, attenuation) {\n  // (Gravity points - (Gravity points * Attenuation rate%) + 1000) / 1000\n  const gravity = convertToGravityPoints(OG);\n  const aPercentage = attenuation/100;\n\n  return ((gravity - (gravity * aPercentage) + 1000) / 1000).toFixed(3);\n}\n\n// * Alcohol Content\nexport function alcoholContent(OG, FG, type = 'ABV') {\n  // ABW = (OE - RE) / (2.0665 - (.010665 * OE) )      - alcohol by weight\n  // ABV = (ABW * (FG / .794) )                        - alcohol by vol\n  const OE = convertToPlato(OG);\n  const AE = convertToPlato(FG);\n  const RE = calculateRealExtract(OE, AE);\n  const ABW = (OE - RE) / (2.0665 - (.010665 * OE) );\n  const ABV = (ABW * (FG / .794) );\n\n  const result = type === 'ABW' ? ABW.toFixed(2) : ABV.toFixed(2);\n\n  return result;\n}\n\n// * Attenuation\nexport function attenuation(OG, FG) {\n  // A = 100 * (OG – FG)/(OG – 1.0)\n  const A = (100 * (OG - FG)/(OG - 1.0)).toFixed(1);\n  return A;\n}\n\n// * IBU\nexport function IBU(hops, OG, vol, type = 'rager') {\n  // TODO: sepatate the unit conversions out of this function\n\n  let utilization,\n      IBU = 0;\n\n  for ( let i = 0; i < hops.length; i++ ) {\n    const utilizationFactor = hops[i].type === 'pellet' ? 1.15 : 1.0;\n\n    if (type === 'tinseth') {\n      utilization = (1.65 * Math.pow(0.000125, OG - 1.0) * ((1 - Math.pow(Math.E, -0.04 * hops[i].length)) / 4.15));\n      IBU += utilization * ((hops[i].aa / 100.0 * oz2kg(hops[i].weight) * 1000000) / gal2l(vol) * utilizationFactor);\n    } else if (type === 'rager') {\n      utilization = 18.11 + 13.86 * tanh((hops[i].length - 31.32) / 18.27);\n      const adjustment = Math.max(0, (OG - 1.050) / 0.2);\n      IBU += oz2kg(hops[i].weight) * 100 * utilization * utilizationFactor * hops[i].aa / (gal2l(vol) * (1 + adjustment));\n    }\n  }\n  \n  return IBU.toFixed(2);\n}\n\n// * SRM\nexport function SRM(malts, vol) {\n  // MCU = (grain_color * grain_weight_lbs) / volume_gallons    - Malt Color Units\n  // SRM = 1.4922 * [MCU ^ 0.6859]                              - The more accurate Morey equation\n  let MCU = 0,\n      SRM;\n\n  for ( let i = 0; i < malts.length; i++ ) {\n    MCU += (malts[i].color * malts[i].weight) / vol;\n\n    MCU = Infinity === MCU ? 0 : MCU;\n  }\n\n  SRM = (1.4922 * Math.pow(MCU, 0.6859)).toFixed(2);\n\n  return SRM;\n}\n\n// * CO2\nexport function CO2(temp, vol, type, beerVol) {\n  let X,\n      dissolvedCO2 = ((-0.9753) * Math.log(temp) + 4.9648);\n      beerVol = null === beerVol ? 5 : '' === beerVol.toString() ? 5 : beerVol;\n\n  switch (type) {\n    case 'forced':\n      // P = -16.6999 - 0.0101059*T + 0.00116512*T^2 + 0.173354*T*V + 4.24267*V - 0.0684226*V^2\n      X = (-16.6999 - (0.0101059 * temp) + (0.00116512 * Math.pow(temp, 2)) + (0.173354 * temp * vol) + (4.24267 * vol) - (0.0684226 * Math.pow(vol, 2))).toFixed(2);\n      break;\n    case 'cornSugar':\n      X = ((((vol - dissolvedCO2) * 4 * (beerVol * 3.8)) / 28.34952) * 1).toFixed(2);\n      break;\n    case 'caneSugar':\n      X = ((((vol - dissolvedCO2) * 4 * (beerVol * 3.8)) / 28.34952) * 0.91).toFixed(2);\n      break;\n    case 'dme':\n      X = ((((vol - dissolvedCO2) * 5.33 * (beerVol * 3.8) ) / 28.34952) * 0.91).toFixed(2);\n      break;\n    default:\n      break;\n  }\n\n  return X;\n}","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass OriginalGravity extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      potential: '',\n      weight: '',\n      efficiency: '',\n      volume: '',\n    }\n  }\n\n  render() {\n    const { calculator } = this.props;\n\n    const handleInputChange = (e) => {\n      const type = e.target.name;\n      this.setState({[type]: e.target.value});\n    }\n\n    const results = () => {\n      const result = calculator([{potential: this.state.potential, weight: this.state.weight}], this.state.efficiency, this.state.volume);\n       return !isNaN(result) && isFinite(result) ? result : '';\n    }\n\n    return (\n      <div>\n        <h2>Original Gravity</h2>\n        <div>\n          <label htmlFor=\"potential\">Malt Potential</label><br />\n          <input\n            name=\"potential\"\n            type=\"number\"\n            value={this.state.potential}\n            onChange={handleInputChange}\n          ></input><br />\n          <label htmlFor=\"weight\">Malt Weight (lbs)</label><br />\n          <input\n            name=\"weight\"\n            type=\"number\"\n            value={this.state.weight}\n            onChange={handleInputChange}\n          ></input><br />\n          <label htmlFor=\"efficiency\">Mash Efficiency (%)</label><br />\n          <input\n            name=\"efficiency\"\n            type=\"number\"\n            value={this.state.efficiency}\n            onChange={handleInputChange}\n          ></input><br />\n          <label htmlFor=\"volume\">Post-boil Volume (gal)</label><br />\n          <input\n            name=\"volume\"\n            type=\"number\"\n            value={this.state.volume}\n            onChange={handleInputChange}\n          ></input><br />\n        </div>\n        <div>\n          <h3>Result:</h3>\n          <p className=\"result\">{results()}</p>\n        </div>\n      </div>\n    );\n  }\n}\n\nOriginalGravity.propTypes = {\n  calculator: PropTypes.func\n};\n\nexport default OriginalGravity;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass PreBoilGravity extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      og: '',\n      volume: '',\n      grainVol: '',\n      totalWaterVol: '',\n    }\n  }\n\n  render() {\n    const { calculator } = this.props;\n\n    const handleInputChange = (e) => {\n      const type = e.target.name;\n      this.setState({[type]: e.target.value});\n    }\n\n    const results = () => {\n      const result = calculator(this.state.og, this.state.grainVol, this.state.totalWaterVol, this.state.volume);\n       return !isNaN(result) && isFinite(result) && result > 1 ? result : '';\n    }\n\n    return (\n      <div>\n        <h2>Pre-Boil Gravity</h2>\n        <div>\n        <label htmlFor=\"grainVol\">Malt Weight (lbs)</label><br />\n          <input\n            name=\"grainVol\"\n            type=\"number\"\n            value={this.state.grainVol}\n            onChange={handleInputChange}\n          ></input><br />\n          <label htmlFor=\"totalWaterVol\">Total Water Volume</label><br />\n          <input\n            name=\"totalWaterVol\"\n            type=\"number\"\n            value={this.state.totalWaterVol}\n            onChange={handleInputChange}\n          ></input><br />\n          <label htmlFor=\"volume\">Post-boil Volume (gal)</label><br />\n          <input\n            name=\"volume\"\n            type=\"number\"\n            value={this.state.volume}\n            onChange={handleInputChange}\n          ></input><br />\n          <label htmlFor=\"og\">Original Gravity</label><br />\n          <input\n            name=\"og\"\n            type=\"number\"\n            value={this.state.og}\n            onChange={handleInputChange}\n          ></input><br />\n        </div>\n        <div>\n          <h3>Result:</h3>\n          <p className=\"result\">{results()}</p>\n        </div>\n      </div>\n    );\n  }\n}\n\nPreBoilGravity.propTypes = {\n  calculator: PropTypes.func\n};\n\nexport default PreBoilGravity;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass PreBoilVolume extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      totalWaterVol: '',\n      grainWeight: '',\n    }\n  }\n\n  render() {\n    const { calculator } = this.props;\n    let vol = null;\n\n    const handleInputChange = (e) => {\n      const type = e.target.name;\n      this.setState({[type]: e.target.value});\n    }\n\n    const results = () => {\n      const result = calculator(this.state.totalWaterVol, this.state.grainWeight);\n       if (!isNaN(result) && isFinite(result) && result > 0) {\n         vol = 'gal';\n         return result;\n       }\n    }\n\n    return (\n      <div>\n        <h2>Pre-Boil Volume</h2>\n        <div>\n          <label htmlFor=\"totalWaterVol\">Total Water Volume</label><br />\n          <input\n            name=\"totalWaterVol\"\n            type=\"number\"\n            value={this.state.totalWaterVol}\n            onChange={handleInputChange}\n          ></input><br />\n          <label htmlFor=\"grainWeight\">Malt Weight (lbs)</label><br />\n          <input\n            name=\"grainWeight\"\n            type=\"number\"\n            value={this.state.grainWeight}\n            onChange={handleInputChange}\n          ></input><br />\n        </div>\n        <div>\n          <h3>Result:</h3>\n          <p className=\"result\">{results()} <label>{vol}</label></p>\n        </div>\n      </div>\n    );\n  }\n}\n\nPreBoilVolume.propTypes = {\n  calculator: PropTypes.func\n};\n\nexport default PreBoilVolume;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass FinalGravity extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      og: '',\n      attenuation: '',\n    }\n  }\n\n  render() {\n    const { calculator } = this.props;\n\n    const handleInputChange = (e) => {\n      const type = e.target.name;\n      this.setState({[type]: e.target.value});\n    }\n\n    const results = () => {\n      const result = calculator(this.state.og, this.state.attenuation);\n       return !isNaN(result) && isFinite(result) && result > 0 ? result : '';\n    }\n\n    return (\n      <div>\n        <h2>Final Gravity</h2>\n        <div>\n          <label htmlFor=\"og\">Original Gravity</label><br />\n          <input\n            name=\"og\"\n            type=\"number\"\n            value={this.state.og}\n            onChange={handleInputChange}\n          ></input><br />\n          <label htmlFor=\"attenuation\">Attenuation (%)</label><br />\n          <input\n            name=\"attenuation\"\n            type=\"number\"\n            value={this.state.attenuation}\n            onChange={handleInputChange}\n          ></input>\n        </div>\n        <div>\n          <h3>Result:</h3>\n          <p className=\"result\">{results()}</p>\n        </div>\n      </div>\n    );\n  }\n}\n\nFinalGravity.propTypes = {\n  calculator: PropTypes.func\n};\n\nexport default FinalGravity;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass AlcoholContent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      og: '',\n      fg: '',\n      formula: 'ABV',\n    }\n  }\n\n  render() {\n    const { calculator } = this.props;\n    let alc = null;\n\n    const handleInputChange = (e) => {\n      const type = e.target.name;\n      this.setState({[type]: e.target.value});\n    }\n\n    const handleCheckboxChange = (e) => {\n      const value = this.state.formula === 'ABV' ? 'ABW' : 'ABV';\n      this.setState({formula: value});\n    }\n\n    const ABVResults = () => {\n      const result = calculator(this.state.og, this.state.fg, this.state.formula);\n      if (!isNaN(result) && isFinite(result) && result > 0) {\n        alc = this.state.formula;\n        return result + '%';\n      } else {\n          return '';\n      }\n    }\n\n    return (\n      <div>\n        <h2>Alcohol Content</h2>\n        <div>\n          <label htmlFor=\"og\">Original Gravity</label><br />\n          <input\n            name=\"og\"\n            type=\"number\"\n            value={this.state.og}\n            onChange={handleInputChange}\n          ></input><br />\n          <label htmlFor=\"fg\">Final Gravity</label><br />\n          <input\n            name=\"fg\"\n            type=\"number\"\n            value={this.state.fg}\n            onChange={handleInputChange}\n          ></input><br />\n          <label htmlFor=\"abvFormula\">ABV</label>\n          <input\n            type=\"checkbox\"\n            id=\"abvFormula\"\n            name=\"formula\"\n            value={this.state.formula}\n            onChange={handleCheckboxChange}\n          ></input>\n          <label htmlFor=\"abvFormula\"><span className=\"toggle\"></span>ABW</label><br />\n        </div>\n        <div>\n          <h3>Result:</h3>\n          <p className=\"result\">{ABVResults()} <label>{alc}</label></p>\n        </div>\n      </div>\n    );\n  }\n}\n\nAlcoholContent.propTypes = {\n  calculator: PropTypes.func\n};\n\nexport default AlcoholContent;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass ApparentAttenuation extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      og: '',\n      fg: '',\n    }\n  }\n\n  render() {\n    const { calculator } = this.props;\n    let atten = null;\n\n    const handleInputChange = (e) => {\n      const type = e.target.name;\n      this.setState({[type]: e.target.value});\n    }\n\n    const attenuationResults = () => {\n      const result = calculator(this.state.og, this.state.fg);\n      if (!isNaN(result) && isFinite(result) && result > 0 && result <= 100) {\n        atten = '%';\n        return result;\n      }\n    }\n\n    return (\n      <div>\n        <h2>Apparent<br />Attenuation</h2>\n        <div>\n          <label htmlFor=\"og\">Original Gravity</label><br />\n          <input\n            name=\"og\"\n            type=\"number\"\n            value={this.state.og}\n            onChange={handleInputChange}\n          ></input><br />\n          <label htmlFor=\"fg\">Final Gravity</label><br />\n          <input\n            name=\"fg\"\n            type=\"number\"\n            value={this.state.fg}\n            onChange={handleInputChange}\n          ></input><br />\n        </div>\n        <div>\n          <h3>Result:</h3>\n          <p className=\"result\">{attenuationResults()}<label>{atten}</label></p>\n        </div>\n      </div>\n    );\n  }\n}\n\nApparentAttenuation.propTypes = {\n  calculator: PropTypes.func,\n};\n\nexport default ApparentAttenuation;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass StrikeTemperature extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      ratio: '',\n      temp1: '',\n      temp2: '',\n    }\n  }\n\n  render() {\n    const { calculator } = this.props;\n    let label = null;\n\n    const handleInputChange = (e) => {\n      const type = e.target.name;\n      this.setState({[type]: e.target.value});\n    }\n\n    const results = () => {\n      const result = calculator(this.state.temp1, this.state.temp2, this.state.ratio);\n      if (!isNaN(result) && isFinite(result) && result > 0) {\n        label = '°F';\n        return result;\n      }\n    }\n\n    return (\n      <div>\n        <h2>Strike Water<br />Temperature</h2>\n        <div>\n          <label htmlFor=\"ratio\">Quarts per lb of grain</label><br />\n          <input\n            name=\"ratio\"\n            type=\"number\"\n            value={this.state.ratio}\n            onChange={handleInputChange}\n          ></input><br />\n          <label htmlFor=\"temp1\">Malt Temperature (°F)</label><br />\n          <input\n            name=\"temp1\"\n            type=\"number\"\n            value={this.state.temp1}\n            onChange={handleInputChange}\n          ></input><br />\n          <label htmlFor=\"temp2\">Target Temperature (°F)</label><br />\n          <input\n            name=\"temp2\"\n            type=\"number\"\n            value={this.state.temp2}\n            onChange={handleInputChange}\n          ></input><br />\n        </div>\n        <div>\n          <h3>Result:</h3>\n          <p className=\"result\">{results()} <label>{label}</label></p>\n        </div>\n      </div>\n    );\n  }\n}\n\nStrikeTemperature.propTypes = {\n  calculator: PropTypes.func\n};\n\nexport default StrikeTemperature;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass StrikeVolume extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      ratio: '',\n      weight: '',\n    }\n  }\n\n  render() {\n    const { calculator } = this.props;\n    let label = null;\n\n    const handleInputChange = (e) => {\n      const type = e.target.name;\n      this.setState({[type]: e.target.value});\n    }\n\n    const results = () => {\n      const result = calculator(this.state.weight, this.state.ratio);\n      if (!isNaN(result) && isFinite(result) && result > 0) {\n        label = 'gal';\n        return result;\n      }\n    }\n\n    return (\n      <div>\n        <h2>Strike Water<br />Volume</h2>\n        <div>\n          <label htmlFor=\"weight\">Malt Weight (lbs)</label><br />\n          <input\n            name=\"weight\"\n            type=\"number\"\n            value={this.state.weight}\n            onChange={handleInputChange}\n          ></input><br />\n          <label htmlFor=\"ratio\">Quarts per lb of grain</label><br />\n          <input\n            name=\"ratio\"\n            type=\"number\"\n            value={this.state.ratio}\n            onChange={handleInputChange}\n          ></input>\n        </div>\n        <div>\n          <h3>Result:</h3>\n          <p className=\"result\">{results()} <label>{label}</label></p>\n        </div>\n      </div>\n    );\n  }\n}\n\nStrikeVolume.propTypes = {\n  calculator: PropTypes.func\n};\n\nexport default StrikeVolume;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass TotalWater extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      batchSize: '',\n      grainWeight: '',\n      boilTime: '',\n      boilOff: '',\n    }\n  }\n\n  render() {\n    const { calculator } = this.props;\n    let label = null;\n\n    const handleInputChange = (e) => {\n      const type = e.target.name;\n      this.setState({[type]: e.target.value});\n    }\n\n    const results = () => {\n      const result = calculator(parseInt(this.state.batchSize), parseInt(this.state.boilTime), parseInt(this.state.boilOff), parseInt(this.state.grainWeight));\n\n       if (this.state.batchSize && this.state.boilTime && this.state.boilOff && this.state.grainWeight && !isNaN(result) && isFinite(result)) {\n         label = 'gal';\n         return result;\n       }\n    }\n\n    return (\n      <div>\n        <h2>Total Water Needed</h2>\n        <div>\n          <label htmlFor=\"batchSize\">Batch Size</label><br />\n          <input\n            name=\"batchSize\"\n            type=\"number\"\n            value={this.state.batchSize}\n            onChange={handleInputChange}\n          ></input><br />\n          <label htmlFor=\"grainWeight\">Malt Weight (lbs)</label><br />\n          <input\n            name=\"grainWeight\"\n            type=\"number\"\n            value={this.state.grainWeight}\n            onChange={handleInputChange}\n          ></input><br />\n          <label htmlFor=\"boilTime\">Boil Time (min)</label><br />\n          <input\n            name=\"boilTime\"\n            type=\"number\"\n            value={this.state.boilTime}\n            onChange={handleInputChange}\n          ></input><br />\n          <label htmlFor=\"boilOff\">Evaporation Loss %/hr</label><br />\n          <input\n            name=\"boilOff\"\n            type=\"number\"\n            value={this.state.boilOff}\n            onChange={handleInputChange}\n          ></input><br />\n        </div>\n        <div>\n          <h3>Result:</h3>\n          <p className=\"result\">{results()} <label>{label}</label></p>\n        </div>\n      </div>\n    );\n  }\n}\n\nTotalWater.propTypes = {\n  calculator: PropTypes.func\n};\n\nexport default TotalWater;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass SpargeVolume extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      totalV: '',\n      mashV: '',\n    }\n  }\n\n  render() {\n    const { calculator } = this.props;\n    let label = null;\n\n    const handleInputChange = (e) => {\n      const type = e.target.name;\n      this.setState({[type]: e.target.value});\n    }\n\n    const results = () => {\n      const result = calculator(this.state.totalV, this.state.mashV);\n      if (!isNaN(result) && isFinite(result) && result > 0) {\n        label = 'gal';\n        return result;\n      }\n    }\n\n    return (\n      <div>\n        <h2>Sparge Water<br />Volume</h2>\n        <div>\n          <label htmlFor=\"totalV\">Total water volume</label><br />\n          <input\n            name=\"totalV\"\n            type=\"number\"\n            value={this.state.totalV}\n            onChange={handleInputChange}\n          ></input><br />\n          <label htmlFor=\"mashV\">Mash water volume</label><br />\n          <input\n            name=\"mashV\"\n            type=\"number\"\n            value={this.state.mashV}\n            onChange={handleInputChange}\n          ></input>\n        </div>\n        <div>\n          <h3>Result:</h3>\n          <p className=\"result\">{results()} <label>{label}</label></p>\n        </div>\n      </div>\n    );\n  }\n}\n\nSpargeVolume.propTypes = {\n  calculator: PropTypes.func\n};\n\nexport default SpargeVolume;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass EvaporationPercent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      postBoilV: '',\n      preBoilV: '',\n      boilTime: '',\n    }\n  }\n\n  render() {\n    const { calculator } = this.props;\n    let label = null;\n\n    const handleInputChange = (e) => {\n      const type = e.target.name;\n      this.setState({[type]: e.target.value});\n    }\n\n    const results = () => {\n      const result = calculator(this.state.postBoilV, this.state.preBoilV, this.state.boilTime);\n      if (!isNaN(result) && isFinite(result) && result > 0) {\n        label = '%';\n        return result;\n      }\n    }\n\n    return (\n      <div>\n        <h2>Evaporation %/hr</h2>\n        <div>\n          <label htmlFor=\"preBoilV\">Pre-Boil volume</label><br />\n          <input\n            name=\"preBoilV\"\n            type=\"number\"\n            value={this.state.preBoilV}\n            onChange={handleInputChange}\n          ></input><br />\n          <label htmlFor=\"postBoilV\">Post-Boil volume</label><br />\n          <input\n            name=\"postBoilV\"\n            type=\"number\"\n            value={this.state.postBoilV}\n            onChange={handleInputChange}\n          ></input><br />\n          <label htmlFor=\"boilTime\">Boil Time (min)</label><br />\n          <input\n            name=\"boilTime\"\n            type=\"number\"\n            value={this.state.boilTime}\n            onChange={handleInputChange}\n          ></input><br />\n        </div>\n        <div>\n          <h3>Result:</h3>\n          <p className=\"result\">{results()}<label>{label}</label></p>\n        </div>\n      </div>\n    );\n  }\n}\n\nEvaporationPercent.propTypes = {\n  calculator: PropTypes.func\n};\n\nexport default EvaporationPercent;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass SRM extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      color: '',\n      weight: '',\n      volume: '',\n    }\n  }\n\n  render() {\n    const { calculator } = this.props;\n    let label = null;\n\n    const handleInputChange = (e) => {\n      const type = e.target.name;\n      this.setState({[type]: e.target.value});\n    }\n\n    const results = () => {\n      const result = calculator([{color: this.state.color, weight: this.state.weight}], this.state.volume);\n      if (!isNaN(result) && isFinite(result) && result > 0) {\n        label = 'SRM';\n        return result;\n      } else {\n          return '';\n      }\n    }\n\n    return (\n      <div>\n        <h2>Beer Color</h2>\n        <div>\n          <label htmlFor=\"color\">Malt Color</label><br />\n          <input\n            name=\"color\"\n            type=\"number\"\n            value={this.state.color}\n            onChange={handleInputChange}\n          ></input><br />\n          <label htmlFor=\"weight\">Malt Weight (lbs)</label><br />\n          <input\n            name=\"weight\"\n            type=\"number\"\n            value={this.state.weight}\n            onChange={handleInputChange}\n          ></input><br />\n          <label htmlFor=\"volume\">Final Volume (gal)</label><br />\n          <input\n            name=\"volume\"\n            type=\"number\"\n            value={this.state.volume}\n            onChange={handleInputChange}\n          ></input><br />\n        </div>\n        <div>\n          <h3>Result:</h3>\n          <p className=\"result\">{results()} <label>{label}</label></p>\n        </div>\n      </div>\n    );\n  }\n}\n\nSRM.propTypes = {\n  calculator: PropTypes.func\n};\n\nexport default SRM;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass IBU extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      aa: '',\n      weight: '',\n      length: '',\n      type: '',\n      og: '',\n      vol: '',\n      formula: 'tinseth',\n    }\n  }\n\n  render() {\n    const { calculator } = this.props;\n    let label = null;\n\n    const handleInputChange = (e) => {\n      const type = e.target.name;\n      this.setState({[type]: e.target.value});\n    }\n\n    const handleCheckboxChange = (e) => {\n      const value = this.state.formula === 'tinseth' ? 'rager' : 'tinseth';\n      this.setState({formula: value});\n    }\n\n    const results = () => {\n      const result = calculator([{aa: this.state.aa, weight: this.state.weight, length: this.state.length, type: this.state.type}], this.state.og, this.state.vol, this.state.formula);\n      if (!isNaN(result) && isFinite(result) && result > 0) {\n        label = 'IBU';\n        return result;\n      } else {\n          return '';\n      }\n    }\n\n    return (\n      <div>\n        <h2>IBU</h2>\n        <div>\n          <label htmlFor=\"aa\">Hop Alpha Acid</label><br />\n          <input\n            name=\"aa\"\n            type=\"number\"\n            value={this.state.aa}\n            onChange={handleInputChange}\n            autoComplete=\"none\"\n          ></input><br />\n          <label htmlFor=\"weight\">Hop Weight (oz)</label><br />\n          <input\n            name=\"weight\"\n            type=\"number\"\n            value={this.state.weight}\n            onChange={handleInputChange}\n          ></input><br />\n          <label htmlFor=\"length\">Hop Time In Boil</label><br />\n          <input\n            name=\"length\"\n            type=\"number\"\n            value={this.state.length}\n            onChange={handleInputChange}\n          ></input><br />\n          <label htmlFor=\"type\">Hop Type</label><br />\n          <select\n            name=\"type\"\n            value={this.state.type}\n            onChange={handleInputChange}\n          >\n            <option value=\"whole\">Whole Leaf</option>\n            <option value=\"pellet\">Pellet</option>\n          </select><br />\n          <label htmlFor=\"og\">Original Gravity</label><br />\n          <input\n            name=\"og\"\n            type=\"number\"\n            value={this.state.og}\n            onChange={handleInputChange}\n          ></input><br />\n          <label htmlFor=\"vol\">Final Volume (gal)</label><br />\n          <input\n            name=\"vol\"\n            type=\"number\"\n            value={this.state.vol}\n            onChange={handleInputChange}\n          ></input><br />\n          <label htmlFor=\"ibuFormula\">Tinseth</label>\n          <input\n            type=\"checkbox\"\n            id=\"ibuFormula\"\n            name=\"formula\"\n            value={this.state.formula}\n            onChange={handleCheckboxChange}\n          ></input>\n          <label htmlFor=\"ibuFormula\"><span className=\"toggle\"></span>Rager</label><br />\n        </div>\n        <div>\n          <h3>Result:</h3>\n          <p className=\"result\">{results()} <label>{label}</label></p>\n        </div>\n      </div>\n    );\n  }\n}\n\nIBU.propTypes = {\n  calculator: PropTypes.func\n};\n\nexport default IBU;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass CO2 extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      temp: '',\n      beerVol: '',\n      co2Vol: '',\n      method: 'cornSugar',\n    }\n  }\n\n  render() {\n    const { calculator } = this.props;\n    let label = null;\n\n    const handleInputChange = (e) => {\n      const type = e.target.name;\n      this.setState({[type]: e.target.value});\n    }\n\n    const results = () => {\n      const result = calculator(this.state.temp, this.state.co2Vol, this.state.method, this.state.beerVol);\n      if (!isNaN(result) && isFinite(result) && result > 0) {\n        label = this.state.method === 'forced' ? 'psi' : 'oz';\n        return result;\n      } else {\n        return '';\n      }\n    }\n\n    return (\n      <div>\n        <h2>Carbonation</h2>\n        <div>\n          <label htmlFor=\"method\">Carbonation Method</label><br />\n          <select\n            name=\"method\"\n            value={this.state.method}\n            onChange={handleInputChange}\n          >\n            <option value=\"cornSugar\">Corn Sugar</option>\n            <option value=\"caneSugar\">Cane Sugar</option>\n            <option value=\"dme\">DME</option>\n            <option value=\"forced\">Forced/Kegged</option>\n          </select><br />\n          <label htmlFor=\"beerVol\">Beer Volume</label><br />\n          <input\n            name=\"beerVol\"\n            type=\"number\"\n            value={this.state.beerVol}\n            onChange={handleInputChange}\n          ></input><br />\n          <label htmlFor=\"co2Vol\">CO2 Target Volume</label><br />\n          <input\n            name=\"co2Vol\"\n            type=\"number\"\n            value={this.state.co2Vol}\n            onChange={handleInputChange}\n          ></input><br />\n          <label htmlFor=\"temp\">Temperature</label><br />\n          <input\n            name=\"temp\"\n            type=\"number\"\n            value={this.state.temp}\n            onChange={handleInputChange}\n          ></input><br />\n        </div>\n        <div>\n          <h3>Result:</h3>\n          <p className=\"result\">{results()} <label>{label}</label></p>\n        </div>\n      </div>\n    );\n  }\n}\n\nCO2.propTypes = {\n  calculator: PropTypes.func\n};\n\nexport default CO2;\n","/** @jsx jsx */\n\nimport { Component } from 'react';\nimport { jsx, css } from '@emotion/core'\n\nimport Header from './components/header';\nimport * as Calculator from './utils/calculator.js';\nimport OriginalGravity from './components/og';\nimport PreBoilGravity from './components/pre-boil-gravity';\nimport PreBoilVolume from './components/pre-boil-volume';\nimport FinalGravity from './components/fg';\nimport AlcoholContent from './components/alcohol-content';\nimport ApparentAttenuation from './components/apparent-attenuation';\nimport StrikeTemperature from './components/strike-temperature';\nimport StrikeVolume from './components/strike-volume';\nimport TotalWater from './components/total-water';\nimport SpargeVolume from './components/sparge-volume';\nimport EvaporationPercent from './components/evap-percent';\nimport SRM from './components/srm';\nimport IBU from './components/ibu';\nimport CO2 from './components/co2';\n\nconst lightBrown = '#58382a';\nconst darkBrown = '#191919';\nconst white = '#fff;';\nconst yellow = '#f4d03f';\n\nconst page = css`\n  padding: 100px 50px 50px;\n  width: 100%;\n  min-height: 100vh;\n  background: linear-gradient(125.4deg, ${lightBrown} 0%, ${darkBrown} 118.45%);\n  box-sizing border-box;\n`;\n\nconst container = css`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n`;\n\nconst card = css`\n  display: inline-block;\n  padding: 20px;\n  margin: 15px 20px;\n  background-color: rgba(233,102,44,0.15);\n  box-sizing border-box;\n  color: ${white}\n  box-shadow: 0px 10px 30px rgba(0, 0, 0, 0.05);\n\n  label {\n    color: ${yellow};\n  }\n`;\n\nclass App extends Component {\n  render() {\n    return (\n      <div css={page} className=\"App\">\n        <Header />\n        <div css={container}>\n          <div css={card}>\n            <TotalWater calculator={Calculator.totalWater} />\n          </div>\n          <div css={card}>\n            <StrikeVolume calculator={Calculator.strikeVolume} />\n          </div>\n          <div css={card}>\n            <StrikeTemperature calculator={Calculator.strikeTemp} />\n          </div>\n          <div css={card}>\n            <SpargeVolume calculator={Calculator.spargeVolume} />\n          </div>\n          <div css={card}>\n            <EvaporationPercent calculator={Calculator.evaporationPercent} />\n          </div>\n          <div css={card}>\n            <PreBoilVolume calculator={Calculator.preBoilVol} />\n          </div>\n          <div css={card}>\n            <OriginalGravity calculator={Calculator.OG} />\n          </div>\n          <div css={card}>\n            <PreBoilGravity calculator={Calculator.preBoilG} />\n          </div>\n          <div css={card}>\n            <FinalGravity calculator={Calculator.FG} />\n          </div>\n          <div css={card}>\n            <AlcoholContent calculator={Calculator.alcoholContent} />\n          </div>\n          <div css={card}>\n            <ApparentAttenuation calculator={Calculator.attenuation} />\n          </div>\n          <div css={card}>\n            <IBU calculator={Calculator.IBU} />\n          </div>\n          <div css={card}>\n            <SRM calculator={Calculator.SRM} />\n          </div>\n          <div css={card}>\n            <CO2 calculator={Calculator.CO2} />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}